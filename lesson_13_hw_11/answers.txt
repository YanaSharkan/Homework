    Завдання 1. Напишіть в нотації Великого О, яка часова складність методу append класу list. ОБЕРЕЖНО: важлива точна
відповідь.

В більшості випадків складність додавання одного елементу в list буде O(1), але це нижня межа складності, і та що
найчастіше трапляється. Наприклад, коли ми додаємо 9й елемент в список і Python потрібно перемістити всі інші елементи в іншу
ячійку пам'яті, то складність буде вище за О(1). Амортизована складність вираховується як О(n)/n.



    Завдання 2. Напишіть в нотації Великого О, яка часова складність перевірки входження елементу в список.
Наприклад: elem in my_list.

Часова складність первевірки входження елементу О(n).



    Завдання 3. Напишіть в нотації Великого О, яка часова складність методу pop класу list. а) в загальному випадку
б) конкретно для випадку без параметру або з параметром -1.

а) В загальному випадку складність буде О(n) Середня кількість операцій буде О(n/2);
б) О(1).



    Завдання 4. Напишіть в нотації Великого О, яка часова складність додавання елементу в словник.
ОБЕРЕЖНО: важлива точна відповідь.

Структура даних яка використовується для dictonaries - це hash table. У випадку коли, hash ключа не знайдено в таблиці,
складність буде О(1). Якщо hash функція для кожного ключа повертає однакове значення hash, то складність буде О(n). Це
трапляється через те, що при збігу hash для різних ключів запускається механізм під назвою collision resolution,
згідно з документацією по структурі даних hash table.



    Завдання 5. Напишіть в нотації Великого О, яка часова складність перевірки входження елементу в словник.
Наприклад: elem in my_dict.

Для Python 3 складність оператору in є завжди О(1).



    Завдання 6.

Складність О(n).



    Завдання 7.

Складність O(n**2).



    Завдання 8.

Складність O(n).










